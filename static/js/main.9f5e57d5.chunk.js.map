{"version":3,"sources":["services/firestoreService.ts","Controller.tsx","Models.ts","Worm.ts","Snack.ts","Canvas.ts","Game.ts","GameShell.tsx","GamePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","db","firestore","clearList","a","batch","collection","get","forEach","x","delete","ref","commit","buttonStyle","padding","Controller","addMove","useCallback","move","id","name","Date","getTime","toString","add","style","type","onClick","Keys","Position","posX","posY","positionsEqual","right","ColoredDot","color","Worm","_headPosition","_size","_direction","DOWN","_step","body","dead","this","push","headPosition","value","length","size","shift","key","UP","LEFT","RIGHT","direction","console","log","worms","anotherWorm","approachedAnotherWorm","increaseSize","find","some","y","canvasSize","pointIsInPoly","isInside","polygon","minX","Math","min","map","minY","maxX","max","maxY","index","width","height","i","j","Snack","occupiedPosition","canvas","newSnackPosition","getRandomPosition","Canvas","_blockSize","ctx","backgroundColor","emptyBlockColor","floor","random","canvasSizeInBlocks","position","dots","clearRect","drawEmptyBlocks","dot","drawBlock","fillStyle","fillRect","Game","canvasSizeinPx","fps","intervalId","tick","snacks","worm","extraDots","blockSize","initSnacks","snacksNumber","newRandomly","setInterval","run","clearInterval","draw","stop","newPosition","nextPosition","possibleMove","checkNextMove","checkSnack","outOfCanvas","checkHimself","element","sI","snack","Object","values","includes","GameShell","game","useRef","canvasRef","getContext","newGame","current","start","useEffect","processData","subscription","data","handleKey","orderBy","onSnapshot","snapshot","docs","d","border","GamePage","App","useState","loaded","setLoaded","auth","signInAnonymously","then","mode","setMode","content","useMemo","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f5e57d5.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport { Keys } from \"../Models\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\n\r\n\r\nexport const authenticateAnonymously = () => {\r\n    return firebase.auth().signInAnonymously();\r\n};\r\n\r\nexport const addListItem = (id: string, name: string) => {\r\n    return db.collection('list')\r\n        .add({ id, name });\r\n};\r\n\r\nexport const getList = () => {\r\n    return db.collection('list')\r\n        .orderBy('id', 'desc')\r\n        .get();\r\n};\r\n\r\nexport const subscribeToList = (processData: (docs: { id: string, name: Keys }[]) => void) => {\r\n    return db.collection('list')\r\n        .orderBy('id', 'desc').onSnapshot((snapshot) => {\r\n            processData(snapshot.docs.map(d => d.data() as { id: string, name: Keys }));\r\n        });\r\n}\r\n\r\nexport const clearList = async () => {\r\n    const batch = db.batch();\r\n    const collection = await db.collection('list').get();\r\n    collection.forEach(x => {\r\n        batch.delete(x.ref);\r\n    });\r\n    await batch.commit();\r\n};\r\n","import { useCallback } from \"react\";\r\nimport { addListItem, clearList } from \"./services/firestoreService\";\r\n\r\nconst buttonStyle = {\r\n    padding: 30\r\n};\r\n\r\nexport function Controller(): JSX.Element {\r\n    const addMove = useCallback((move: 'up' | 'down' | 'right' | 'left') => {\r\n        addListItem(new Date().getTime().toString(), move);\r\n    }, []);\r\n\r\n    return <>\r\n        <button style={buttonStyle} type=\"button\" onClick={() => addMove('up')}>Up</button>\r\n        <div>\r\n            <button style={buttonStyle} type=\"button\" onClick={() => addMove('left')}>Left</button>\r\n            <button style={buttonStyle} type=\"button\" onClick={() => addMove('down')}>Down</button>\r\n            <button style={buttonStyle} type=\"button\" onClick={() => addMove('right')}>Right</button>\r\n        </div>\r\n    </>;\r\n}","export class Position {\r\n    constructor(public posX: number, public posY: number) { }\r\n\r\n    public positionsEqual = (right: Position): boolean => {\r\n        return this.posX === right.posX && this.posY === right.posY;\r\n    };\r\n}\r\n\r\nexport enum Keys {\r\n    LEFT = 'left',\r\n    UP = 'up',\r\n    RIGHT = 'right',\r\n    DOWN = 'down'\r\n}\r\n\r\nexport interface ISize {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport interface ICanvasSize extends ISize {\r\n    blockSize: number;\r\n}\r\n\r\nexport class ColoredDot extends Position {\r\n    constructor(posX: number, posY: number, public color: string) {\r\n        super(posX, posY);\r\n    }\r\n}\r\n","import { Position, Keys, ISize } from \"./Models\";\r\n\r\nexport class Worm {\r\n    public get headPosition(): Position {\r\n        return this._headPosition;\r\n    }\r\n\r\n    public set headPosition(value: Position) {\r\n        if (this.body.length >= this.size) {\r\n            this.body.shift();\r\n        }\r\n        this.body.push(value);\r\n        this._headPosition = value;\r\n    }\r\n\r\n    public body: Position[] = [];\r\n\r\n    public increaseSize(value: number = 1): void {\r\n        this._size = this.size + value;\r\n    }\r\n\r\n    public dead = false;\r\n\r\n    public get size(): number {\r\n        return this._size;\r\n    }\r\n\r\n    public get direction(): Keys {\r\n        return this._direction;\r\n    }\r\n\r\n    public set direction(key: Keys) {\r\n        const wrongDirection =\r\n            (this._direction === Keys.DOWN && key === Keys.UP) ||\r\n            (this._direction === Keys.UP && key === Keys.DOWN) ||\r\n            (this._direction === Keys.LEFT && key === Keys.RIGHT) ||\r\n            (this._direction === Keys.RIGHT && key === Keys.LEFT);\r\n\r\n        if (!wrongDirection) {\r\n            this._direction = key;\r\n        }\r\n    }\r\n\r\n    public nextPosition(direction: Keys): Position {\r\n        switch (direction) {\r\n            case Keys.UP:\r\n                return new Position(this.headPosition.posX, this.headPosition.posY - this._step);\r\n            case Keys.DOWN:\r\n                return new Position(this.headPosition.posX, this.headPosition.posY + this._step);\r\n            case Keys.LEFT:\r\n                return new Position(this.headPosition.posX - this._step, this.headPosition.posY);\r\n            case Keys.RIGHT:\r\n                return new Position(this.headPosition.posX + this._step, this.headPosition.posY);\r\n            default:\r\n                console.log(\"no action handler for key: \", direction);\r\n                return this.headPosition;\r\n        }\r\n    }\r\n\r\n    public checkAnotherWorm(headPosition: Position, worms: Worm[]): void {\r\n        const anotherWorm = this.approachedAnotherWorm(worms, headPosition);\r\n        if (anotherWorm) {\r\n            anotherWorm.dead = true;\r\n            this.increaseSize(anotherWorm.size);\r\n        }\r\n    }\r\n\r\n    public approachedAnotherWorm(worms: Worm[], headPosition: Position): Worm | undefined {\r\n        return worms.find(\r\n            x => !x.headPosition.positionsEqual(headPosition) && !x.dead && x.body.some(y => y.positionsEqual(headPosition))\r\n        );\r\n    }\r\n\r\n    public checkHimself(headPosition: Position, canvasSize: ISize): boolean {\r\n        return this.body.some(x => x.positionsEqual(headPosition)) || this.pointIsInPoly(headPosition, canvasSize);\r\n    }\r\n\r\n    public pointIsInPoly(headPosition: Position, canvasSize: ISize): boolean {\r\n        let isInside = false;\r\n\r\n        const polygon: Position[] = [...this.body];\r\n\r\n        const minX = Math.min(...polygon.map(x => x.posX));\r\n        const minY = Math.min(...polygon.map(x => x.posY));\r\n        const maxX = Math.max(...polygon.map(x => x.posX));\r\n        const maxY = Math.max(...polygon.map(x => x.posY));\r\n\r\n        if (minX === 0) {\r\n            for (let index = minY; index < maxY; index++) {\r\n                polygon.push(new Position(-1, index));\r\n            }\r\n        }\r\n\r\n        if (minY === 0) {\r\n            for (let index = minX; index < maxX; index++) {\r\n                polygon.push(new Position(index, -1));\r\n            }\r\n        }\r\n\r\n        if (maxX === canvasSize.width) {\r\n            for (let index = minY; index < maxY; index++) {\r\n                polygon.push(new Position(canvasSize.width + 1, index));\r\n            }\r\n        }\r\n\r\n        if (maxY === canvasSize.height) {\r\n            for (let index = minX; index < maxX; index++) {\r\n                polygon.push(new Position(index, canvasSize.height + 1));\r\n            }\r\n        }\r\n\r\n        if (headPosition.posX < minX || headPosition.posX > maxX || headPosition.posY < minY || headPosition.posY > maxY) {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\r\n            if (\r\n                polygon[i].posY > headPosition.posY !== polygon[j].posY > headPosition.posY &&\r\n                headPosition.posX <\r\n                ((polygon[j].posX - polygon[i].posX) * (headPosition.posY - polygon[i].posY)) /\r\n                (polygon[j].posY - polygon[i].posY) +\r\n                polygon[i].posX\r\n            ) {\r\n                isInside = !isInside;\r\n            }\r\n        }\r\n\r\n        return isInside;\r\n    }\r\n\r\n    constructor(\r\n        private _headPosition: Position = new Position(0, 0),\r\n        private _size: number = 3,\r\n        private _direction: Keys = Keys.DOWN,\r\n        private _step: number = 1\r\n    ) {\r\n        this.body.push(this.headPosition);\r\n    }\r\n}\r\n","import { Position } from './Models';\r\nimport { Canvas } from './Canvas';\r\n\r\nexport class Snack extends Position {\r\n    public static newRandomly(occupiedPosition: Position[], canvas: Canvas): Snack {\r\n        let newSnackPosition = canvas.getRandomPosition();\r\n        while (occupiedPosition.some(y => y.positionsEqual(newSnackPosition))) {\r\n            newSnackPosition = canvas.getRandomPosition();\r\n        }\r\n        const { posX, posY } = newSnackPosition;\r\n        return new this(posX, posY);\r\n    }\r\n}\r\n","import { ISize, Position, ColoredDot } from \"./Models\";\r\n\r\nexport class Canvas {\r\n    private size: ISize = { width: 0, height: 0 };\r\n    private backgroundColor = '#aab9b4';\r\n    private emptyBlockColor = '#8a9b93';\r\n\r\n    constructor(width: number, height: number, private _blockSize: number = 1, private ctx: CanvasRenderingContext2D) {\r\n        this.size = { width, height };\r\n    }\r\n\r\n    public getRandomPosition(): Position {\r\n        return new Position(\r\n            Math.floor(Math.random() * this.canvasSizeInBlocks.width),\r\n            Math.floor(Math.random() * this.canvasSizeInBlocks.height)\r\n        );\r\n    }\r\n\r\n    public get canvasSizeInBlocks(): ISize {\r\n        return { width: Math.floor(this.size.width / this._blockSize), height: Math.floor(this.size.height / this._blockSize) };\r\n    }\r\n\r\n    public outOfCanvas(position: Position): boolean {\r\n        return (\r\n            this.canvasSizeInBlocks.height <= position.posY ||\r\n            position.posY < 0 ||\r\n            this.canvasSizeInBlocks.width <= position.posX ||\r\n            position.posX < 0\r\n        );\r\n    }\r\n\r\n    public draw(dots: ColoredDot[]): void {\r\n        this.ctx.clearRect(0, 0, this.size.width, this.size.height);\r\n        this.drawEmptyBlocks();\r\n        for (let index = 0; index < dots.length; index++) {\r\n            const dot = dots[index];\r\n            this.drawBlock(dot);\r\n        }\r\n    }\r\n\r\n    private drawEmptyBlocks(): void {\r\n        for (let i = 0; i < this.canvasSizeInBlocks.width; i++) {\r\n            for (let j = 0; j < this.canvasSizeInBlocks.height; j++) {\r\n                this.drawBlock(new ColoredDot(i, j, this.emptyBlockColor));\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawBlock(dot: ColoredDot): void {\r\n        this.ctx.fillStyle = dot.color;\r\n        this.ctx.fillRect(dot.posX * this._blockSize, dot.posY * this._blockSize, this._blockSize, this._blockSize);\r\n        this.ctx.fillStyle = this.backgroundColor;\r\n        this.ctx.fillRect(dot.posX * this._blockSize + 1, dot.posY * this._blockSize + 1, this._blockSize - 2, this._blockSize - 2);\r\n        this.ctx.fillStyle = dot.color;\r\n        this.ctx.fillRect(dot.posX * this._blockSize + 2, dot.posY * this._blockSize + 2, this._blockSize - 4, this._blockSize - 4);\r\n    }\r\n}\r\n","import { Keys, Position, ColoredDot, ICanvasSize } from \"./Models\";\r\nimport { Worm } from \"./Worm\";\r\nimport { Snack } from \"./Snack\";\r\nimport { Canvas } from \"./Canvas\";\r\n\r\nexport class Game {\r\n    private intervalId?: NodeJS.Timeout;\r\n    private tick = 0;\r\n    private snacks: Snack[] = [];\r\n    private worm: Worm;\r\n    private canvas: Canvas;\r\n\r\n    private extraDots: Position[] = [];\r\n\r\n    constructor(\r\n        ctx: CanvasRenderingContext2D,\r\n        canvasSizeinPx: ICanvasSize,\r\n        private fps = 50\r\n    ) {\r\n        this.canvas = new Canvas(canvasSizeinPx.width, canvasSizeinPx.height, canvasSizeinPx.blockSize, ctx);\r\n\r\n        this.worm = new Worm(this.canvas.getRandomPosition());\r\n\r\n        this.initSnacks(1);\r\n    }\r\n\r\n    private initSnacks(snacksNumber: number): void {\r\n        for (let index = 0; index < snacksNumber; index++) {\r\n            this.snacks.push(Snack.newRandomly(this.worm.body, this.canvas));\r\n        }\r\n    }\r\n\r\n    public start(random: boolean = false): void {\r\n        this.intervalId = setInterval(() => {\r\n            this.run(random);\r\n        }, 1000 / this.fps);\r\n    }\r\n\r\n    public stop(): void {\r\n        if (this.intervalId) {\r\n            clearInterval(this.intervalId);\r\n        }\r\n    }\r\n\r\n    private run(random: boolean): void {\r\n        this.tick++;\r\n        if (this.move(this.worm, this.worm.direction)) {\r\n            this.draw();\r\n        }\r\n        if (this.worm.dead) {\r\n            this.stop();\r\n        }\r\n    }\r\n\r\n    private move(worm: Worm, direction: Keys): boolean {\r\n        const newPosition = worm.nextPosition(direction);\r\n        const possibleMove = this.checkNextMove(newPosition, worm);\r\n        if (possibleMove) {\r\n            for (let index = 0; index < this.snacks.length; index++) {\r\n                this.checkSnack(worm, index, newPosition);\r\n            }\r\n            worm.headPosition = newPosition;\r\n            return possibleMove;\r\n        }\r\n        return possibleMove;\r\n    }\r\n\r\n    private checkNextMove(headPosition: Position, worm: Worm): boolean {\r\n        if (this.canvas.outOfCanvas(headPosition)) {\r\n            return false;\r\n        }\r\n        const wormApproachedHimself = worm.checkHimself(headPosition, this.canvas.canvasSizeInBlocks);\r\n        if (wormApproachedHimself) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private draw(): void {\r\n        const dots: ColoredDot[] = [];\r\n        for (let index = 0; index < this.worm.body.length; index++) {\r\n            const element = this.worm.body[index];\r\n            const color = this.worm.dead ? \"burlywood\" : \"black\";\r\n            dots.push(new ColoredDot(element.posX, element.posY, color));\r\n        }\r\n        dots.push(new ColoredDot(this.worm.headPosition.posX, this.worm.headPosition.posY, \"#965050\"));\r\n        for (let sI = 0; sI < this.snacks.length; sI++) {\r\n            const snack = this.snacks[sI];\r\n            const color = \"#447144\";\r\n            dots.push(new ColoredDot(snack.posX, snack.posY, color));\r\n        }\r\n        dots.push(...(this.extraDots.map(x => new ColoredDot(\r\n            x.posX,\r\n            x.posY,\r\n            \"blue\"\r\n        ))));\r\n        this.canvas.draw(dots);\r\n    }\r\n\r\n    private checkSnack(worm: Worm, index: number, headPosition: Position): void {\r\n        const wormApproachedSnack = this.snacks[index].positionsEqual(headPosition);\r\n        if (wormApproachedSnack) {\r\n            worm.increaseSize();\r\n            this.snacks[index] = Snack.newRandomly(this.worm.body, this.canvas);\r\n        }\r\n    }\r\n\r\n    public handleKey(key: Keys): void {\r\n        if (!Object.values(Keys).includes(key)) {\r\n            return;\r\n        }\r\n        this.worm.direction = key;\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Game } from \"./Game\";\r\nimport { ICanvasSize } from \"./Models\";\r\nimport { clearList, subscribeToList } from \"./services/firestoreService\";\r\n\r\ninterface GameShellProps {\r\n    canvasSize: ICanvasSize;\r\n}\r\n\r\nexport function GameShell({ canvasSize }: GameShellProps): JSX.Element {\r\n    const game = useRef<Game>();\r\n\r\n    const canvasRef = useCallback((element: HTMLCanvasElement) => {\r\n        if (!element) {\r\n            return;\r\n        }\r\n        const ctx = element.getContext(\"2d\") as CanvasRenderingContext2D;\r\n        const newGame = new Game(ctx, canvasSize, 50);\r\n        game.current = newGame;\r\n        newGame.start(true);\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const subscription = subscribeToList(data => {\r\n            if (data.length) {\r\n                game.current?.handleKey(data[0].name);\r\n            }\r\n        });\r\n        return () => {\r\n            subscription();\r\n            game.current?.stop();\r\n            clearList();\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <canvas\r\n            ref={canvasRef}\r\n            width={canvasSize.width}\r\n            height={canvasSize.height}\r\n            style={{ border: \"1px solid\" }}\r\n        />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { GameShell } from \"./GameShell\";\r\n\r\nexport function GamePage(): JSX.Element {\r\n    const blockSize = 8;\r\n    const canvasWidth = 500;\r\n    const canvasHeight = 500;\r\n\r\n    return <div>\r\n        <GameShell canvasSize={{ width: canvasWidth, height: canvasHeight, blockSize }}></GameShell>\r\n    </div>;\r\n}","import React, { useEffect, useMemo, useState } from 'react';\nimport './App.css';\nimport { authenticateAnonymously } from './services/firestoreService';\nimport { Controller } from './Controller';\nimport { GamePage } from './GamePage';\n\nfunction App() {\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    authenticateAnonymously().then((a) => {\n      setLoaded(true);\n    });\n  });\n\n  const [mode, setMode] = useState(2);\n\n  const content = useMemo(() => {\n    if (mode === 0) {\n      return <GamePage />;\n    }\n\n    if (mode === 1) {\n      return <Controller />;\n    }\n\n    return <><h2>Choose mode:</h2>\n      <button type='button' onClick={() => setMode(0)}>Game</button>\n      <button type='button' onClick={() => setMode(1)}>Controller</button>\n    </>;\n  }, [mode]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button type='button' onClick={() => setMode(2)}>Back</button>\n        {loaded && <>\n          {content}\n        </>}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}